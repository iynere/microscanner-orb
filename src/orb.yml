version: 2.1

description: |
  An orb for working with Google Container Registry (GCR)

  The executors within this Orb provide run-time environments that contain the
  necessary dependencies for executing the jobs and commands in this orb,
  except for the following required dependencies that must be configured in
  CircleCI in order to use this orb - Docker, environment variables for GCP
  login ($GCLOUD_SERVICE_KEY)

  TODO - add instructions for storing env variables

  The source for this Orb can be found here:
  https://github.com/CircleCI-Public/circleci-orbs/tree/master/src/gcp-gcr

examples:
  simple_build_and_push:
    description: Log into Google Cloud Plaform, build and push image to GCR
    usage:
      version: 2.1

      orbs:
        gcp-gcr: circleci/gcp-gcr@1.0.0

      workflows:
        build_and_push_image:
          jobs:
            - gcp-gcr/build_and_push_image_using_remote_docker:
                context: myContext # your context containing gcloud login variables
                google-project-id: myGoogleProjectId
                google-compute-zone: myGoogleComputeZone
                registry-url: us.gcr.io # gcr.io, eu.gcr.io, asia.gcr.io
                image: my-image # your image name
                tag: latest

orbs:
  gcp-cli: ttrahan/gcp-cli@dev:alpha

executors:
  default:
    description: A debian-based machine executor for use when running the gcloud
                 CLI.  Note that there is an overhead for provisioning a machine
                 executor as a result of spinning up a private Docker server.
                 Use of the machine key may require additional fees.
    machine: 
      enabled: true

commands:
  install-docker:
    description: Install Docker client, if not available.
    parameters:
      version:
        description: Docker version to install
        type: string
        default: 18.06.1-ce
    steps:
      - run:
          name: Install Docker client
          command: |
            if [[ command -v docker == "" ]]; then
              set -x
              VER=<<parameters.version>>
              curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
              tar -xz -C /tmp -f /tmp/docker-$VER.tgz
              mv /tmp/docker/* /usr/bin
              echo "Docker client installed."
            else
              echo "Docker client already installed."
            fi

  gcr-auth:
    description: Configure Docker to use gcloud as a credential helper. Note 
                 that using this command requires the use of a 'machine' 
                 executor.
    parameters:
      gcloud-service-key:
        description: The gcloud service key
        type: string
        default: $GCLOUD_SERVICE_KEY
      google-project-id:
        description: The Google project ID to connect with via the gcloud CLI
        type: string
        default: $GOOGLE_PROJECT_ID
      google-compute-zone:
        description: The Google compute zone to connect with via the gcloud CLI
        type: string
        default: $GOOGLE_COMPUTE_ZONE
    steps:
      - gcp-cli/install
      - gcp-cli/initialize:
          google-project-id: <<parameters.google-project-id>>
          google-compute-zone: <<parameters.google-compute-zone>>
      - run:
          name: gcloud auth configure-docker
          command: |
            # configure Docker to use gcloud as a credential helper
            gcloud auth configure-docker --quiet --project <<parameters.google-project-id>>
  build-image:
    description: Build a docker image
    parameters:
      registry-url:
        description: The GCR registry URL from ['', us, eu, asia].gcr.io
        type: string
        default: gcr.io
      google-project-id:
        description: The Google project ID to connect with via the gcloud CLI
        type: string
        default: $GOOGLE_PROJECT_ID
      image:
        description: A name for your docker image
        type: string
        default: $GOOGLE_PROJECT_ID
      tag:
        description: A docker image tag
        type: string
        default: "latest"
      path-to-dockerfile:
        description: The relative path to the Dockerfile to use when building image
        type: string
        default: "."
    steps:
      - run:
          name: Build docker image
          command: docker build -t <<parameters.registry-url>>/<<parameters.google-project-id>>/<<parameters.image>>:<<parameters.tag>> <<parameters.path-to-dockerfile>>
  push-image:
    description: "Push a container image to the GCR registry"
    parameters:
      registry-url:
        description: The GCR registry URL from ['', us, eu, asia].gcr.io
        type: string
        default: gcr.io
      google-project-id:
        description: The Google project ID to connect with via the gcloud CLI
        type: string
        default: $GOOGLE_PROJECT_ID
      image:
        description: A name for your docker image
        type: string
        default: $GOOGLE_PROJECT_ID
      tag:
        description: A docker image tag
        type: string
        default: "latest"
    steps:
      - run:
          name: Push image to GCR
          command: |
            # Initialize gcloud CLI
            docker push <<parameters.registry-url>>/<<parameters.google-project-id>>/<<parameters.image>>:<<parameters.tag>>
jobs:
  build_and_push_image:
    description: Install GCP CLI, if needed, and configure. Build and push 
                 image to repository. Requires environment variables
                 for GCLOUD_SERVICE_KEY. We recommend these be saved in a 
                 Project (https://circleci.com/docs/2.0/env-vars/#setting-an-environment-variable-in-a-project) or in Contexts (https://circleci.com/docs/2.0/contexts/).
    executor: default
    parameters:
      gcloud-service-key:
        description: The gcloud service key
        type: string
        default: $GCLOUD_SERVICE_KEY
      google-project-id:
        description: The Google project ID to connect with via the gcloud CLI
        type: string
        default: $GOOGLE_PROJECT_ID
      google-compute-zone:
        description: The Google compute zone to connect with via the gcloud CLI
        type: string
        default: $GOOGLE_COMPUTE_ZONE
      registry-url:
        description: The GCR registry URL from ['', us, eu, asia].gcr.io
        type: string
        default: gcr.io
      image:
        description: A name for your docker image
        type: string
        default: <<parameters.google-project-id>>
      tag:
        description: A docker image tag
        type: string
        default: "latest"
      path-to-dockerfile:
        description: The relative path to the Dockerfile to use when building image
        type: string
        default: "."
    steps:
      - checkout
      - install-docker
      - gcr-auth:
          google-project-id: <<parameters.google-project-id>>
          google-compute-zone: us-west1-b
      - build-image:
          registry-url: <<parameters.registry-url>>
          google-project-id: <<parameters.google-project-id>>
          image: <<parameters.image>>
          tag: << parameters.tag >>
          path-to-dockerfile: <<parameters.path-to-dockerfile>>
      - push-image:
          registry-url: <<parameters.registry-url>>
          google-project-id: <<parameters.google-project-id>>
          image: <<parameters.image>>
          tag: << parameters.tag >>
