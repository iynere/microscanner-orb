version: 2.1

description: |
  TODO
examples:
  simple_build_and_push:
    description: Log into Google Cloud Plaform, build and push image to GCR
    usage:
      version: 2.1

      orbs:
        gcp-gcr: circleci/gcp-gcr@1.0.0

      workflows:
        build_and_push_image:
          jobs:
            - gcp-gcr/build_and_push_image_using_remote_docker:
                context: myContext # your context containing gcloud login variables
                google-project-id: myGoogleProjectId
                google-compute-zone: myGoogleComputeZone
                registry-url: us.gcr.io # gcr.io, eu.gcr.io, asia.gcr.io
                image: my-image # your image name
                tag: latest

executors:
  default:
    description: A debian-based machine executor.  Note that there is an 
                 overhead for provisioning a machine executor as a result of
                 spinning up a private Docker server. Use of the machine key
                 may require additional fees.
    machine: 
      image: circleci/classic:201808-01

commands:
  install:
    description: Install the Aqua microscanner binary
    parameters:
      token:
        description: The Aqua microscanner token
        type: string
        default: $AQUA_TOKEN
    steps:
      - run: |
          git clone git@github.com:lukebond/microscanner-wrapper.git
      - run: pwd && ls -a microscanner-wrapper
  scan:
    description: Scan container image
    parameters:
      token:
        description: The Aqua microscanner token
        type: string
        default: $AQUA_TOKEN
      image:
        description: The image to scan
        type: string
    steps:
      - run: |
          MICROSCANNER_TOKEN=<<parameters.token>> ./microscanner-wrapper/scan.sh <<parameters.image>> 




#   gcr-auth:
#     description: Configure Docker to use gcloud as a credential helper. Note 
#                  that using this command requires the use of a 'machine' 
#                  executor.
#     parameters:
#       gcloud-service-key:
#         description: The gcloud service key
#         type: string
#         default: $GCLOUD_SERVICE_KEY
#       google-project-id:
#         description: The Google project ID to connect with via the gcloud CLI
#         type: string
#         default: $GOOGLE_PROJECT_ID
#       google-compute-zone:
#         description: The Google compute zone to connect with via the gcloud CLI
#         type: string
#         default: $GOOGLE_COMPUTE_ZONE
#     steps:
#       - gcp-cli/install
#       - gcp-cli/initialize:
#           google-project-id: <<parameters.google-project-id>>
#           google-compute-zone: <<parameters.google-compute-zone>>
#       - run:
#           name: gcloud auth configure-docker
#           command: |
#             # Set sudo to work whether logged in as root user or non-root user
#             if [[ $EUID == 0 ]]; then export SUDO=""; else export SUDO="sudo"; fi
#
#             # configure Docker to use gcloud as a credential helper
#             $SUDO gcloud auth configure-docker --quiet --project <<parameters.google-project-id>>
#   build-image:
#     description: Build a docker image
#     parameters:
#       registry-url:
#         description: The GCR registry URL from ['', us, eu, asia].gcr.io
#         type: string
#         default: gcr.io
#       google-project-id:
#         description: The Google project ID to connect with via the gcloud CLI
#         type: string
#         default: $GOOGLE_PROJECT_ID
#       image:
#         description: A name for your docker image
#         type: string
#         default: $GOOGLE_PROJECT_ID
#       tag:
#         description: A docker image tag
#         type: string
#         default: "latest"
#       path-to-dockerfile:
#         description: The relative path to the Dockerfile to use when building image
#         type: string
#         default: "."
#     steps:
#       - run:
#           name: Build docker image
#           command: docker build -t <<parameters.registry-url>>/<<parameters.google-project-id>>/<<parameters.image>>:<<parameters.tag>> <<parameters.path-to-dockerfile>>
#   push-image:
#     description: "Push a container image to the GCR registry"
#     parameters:
#       registry-url:
#         description: The GCR registry URL from ['', us, eu, asia].gcr.io
#         type: string
#         default: gcr.io
#       google-project-id:
#         description: The Google project ID to connect with via the gcloud CLI
#         type: string
#         default: $GOOGLE_PROJECT_ID
#       image:
#         description: A name for your docker image
#         type: string
#         default: $GOOGLE_PROJECT_ID
#       tag:
#         description: A docker image tag
#         type: string
#         default: "latest"
#     steps:
#       - run:
#           name: Push image to GCR
#           command: |
#             docker push <<parameters.registry-url>>/<<parameters.google-project-id>>/<<parameters.image>>:<<parameters.tag>>
# jobs:
#   build_and_push_image:
#     description: Install GCP CLI, if needed, and configure. Build and push 
#                  image to repository. Requires environment variables
#                  for GCLOUD_SERVICE_KEY. We recommend these be saved in a 
#                  Project (https://circleci.com/docs/2.0/env-vars/#setting-an-environment-variable-in-a-project) or in Contexts (https://circleci.com/docs/2.0/contexts/).
#     executor: default
#     parameters:
#       gcloud-service-key:
#         description: The gcloud service key
#         type: string
#         default: $GCLOUD_SERVICE_KEY
#       google-project-id:
#         description: The Google project ID to connect with via the gcloud CLI
#         type: string
#         default: $GOOGLE_PROJECT_ID
#       google-compute-zone:
#         description: The Google compute zone to connect with via the gcloud CLI
#         type: string
#         default: $GOOGLE_COMPUTE_ZONE
#       registry-url:
#         description: The GCR registry URL from ['', us, eu, asia].gcr.io
#         type: string
#         default: gcr.io
#       image:
#         description: A name for your docker image
#         type: string
#         default: <<parameters.google-project-id>>
#       tag:
#         description: A docker image tag
#         type: string
#         default: "latest"
#       path-to-dockerfile:
#         description: The relative path to the Dockerfile to use when building image
#         type: string
#         default: "."
#     steps:
#       - checkout
#       - gcr-auth:
#           google-project-id: <<parameters.google-project-id>>
#           google-compute-zone: <<parameters.google-compute-zone>>
#       - build-image:
#           registry-url: <<parameters.registry-url>>
#           google-project-id: <<parameters.google-project-id>>
#           image: <<parameters.image>>
#           tag: << parameters.tag >>
#           path-to-dockerfile: <<parameters.path-to-dockerfile>>
#       - run: ls -a /home/circleci
#       - run: ls -a /home/circleci/.docker
#       - push-image:
#           registry-url: <<parameters.registry-url>>
#           google-project-id: <<parameters.google-project-id>>
#           image: <<parameters.image>>
#           tag: <<parameters.tag>>
